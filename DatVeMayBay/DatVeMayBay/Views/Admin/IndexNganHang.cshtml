@*@model IEnumerable<Final_APP.Entities.NganHang>*@
<!-- Thêm thư viện phân trang -->
@model PagedList.IPagedList<DatVeMayBay.Models.NganHang>
@using PagedList.Mvc;

@{ ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml"; }

<h2>Danh sách ngân hàng</h2>


<table class="table">
    <tr>
        <th>
            STT
        </th>
        <th>
            Mã ngân hàng
        </th>
        <th>
            Tên ngân hàng
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.MaNganHang)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.TenNganHang)
    </td>
    <td>
        <a class="btn btn-outline-dark" href="/Admin/EditNganHang?id=@item.MaNganHang">Sửa</a>
        |
        <button type="button" class="btn btn-outline-danger" title="Delete" id="@item.MaNganHang" onclick="Delete('@item.MaNganHang')">Xóa</button>

    </td>
</tr>}


</table>


<!-- Thêm mã phân trang -->
<br />
Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("UserDetail",
    new { page }),
    new PagedListRenderOptions()
    {
        LiElementClasses = new List<string> { "page-link" }
    })
<!-- Kết thúc -->


<div class="overlay toggle-menu"></div>


<script src="~/assets/js/JavaScript.js"></script>
<script>var tables = document.getElementsByTagName('table');
    var table = tables[tables.length - 1];
    var rows = table.rows;
    for (var i = 1, td; i < rows.length; i++) {
        td = document.createElement('td');
        td.appendChild(document.createTextNode(i));
        rows[i].insertBefore(td, rows[i].firstChild);
    }



    var deleteLinks = document.querySelectorAll('.delete');

    for (var i = 0; i < deleteLinks.length; i++) {
        deleteLinks[i].addEventListener('click', function (event) {
            event.preventDefault();

            var choice = confirm(this.getAttribute('data-confirm'));

            if (choice) {
                window.location.href = this.getAttribute('href');
            }
        });
    }

    function Delete(ID) {
        Swal.fire({
            title: 'Bạn có chắc chắn muốn xóa ?',
            text: "Khi xóa bản ghi này sẽ không thể hoàn tác!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Xóa!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: "/Admin/DeleteNganHang",
                    type: "POST",
                    data: { id: ID },
                    success: function (response) {
                        console.log(response);
                        if (response.message == "Success!") {
                            Swal.fire({
                                icon: 'success',
                                title: 'SUCCESSFUL',
                                timer: 2000,
                                text: 'Delete successfully!',
                            })
                            setTimeout(window.location.reload(), 10000);
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'OOPS',
                                text: 'Something went wrong!'
                            })
                        }
                    },
                    error: function (err) {
                        Swal.fire({
                            icon: 'error',
                            title: 'OOPS',
                            text: err
                        })
                    }
                });
            }
        })
    }</script>



